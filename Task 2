def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_winner(board):
    lines = board + [list(x) for x in zip(*board)] + [[board[i][i] for i in range(3)], [board[i][2 - i] for i in range(3)]]
    for line in lines:
        if line.count(line[0]) == 3 and line[0] != " ":
            return line[0]
    return None

def minimax(board, depth, is_max):
    winner = check_winner(board)
    if winner == 'O': return 1
    if winner == 'X': return -1
    if all(cell != ' ' for row in board for cell in row): return 0

    if is_max:
        best = -float('inf')
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'O'
                    best = max(best, minimax(board, depth + 1, False))
                    board[i][j] = ' '
        return best
    else:
        best = float('inf')
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'X'
                    best = min(best, minimax(board, depth + 1, True))
                    board[i][j] = ' '
        return best

def find_best_move(board):
    best_val = -float('inf')
    move = (-1, -1)
    for i in range(3):
        for j in range(3):
            if board[i][j] == ' ':
                board[i][j] = 'O'
                move_val = minimax(board, 0, False)
                board[i][j] = ' '
                if move_val > best_val:
                    move = (i, j)
                    best_val = move_val
    return move

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    print_board(board)

    while True:
        row = int(input("Enter your row (0-2): "))
        col = int(input("Enter your column (0-2): "))
        if board[row][col] == ' ':
            board[row][col] = 'X'
        else:
            print("Cell already taken!")
            continue

        winner = check_winner(board)
        if winner:
            print_board(board)
            print(f"Winner is {winner}!")
            break

        if all(cell != ' ' for row in board for cell in row):
            print("It's a draw!")
            break

        ai_move = find_best_move(board)
        board[ai_move[0]][ai_move[1]] = 'O'
        print_board(board)
        winner = check_winner(board)
        if winner:
            print(f"Winner is {winner}!")
            break

# Uncomment to play
play_game()
